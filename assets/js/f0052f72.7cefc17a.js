"use strict";(self.webpackChunkeventbusforunity=self.webpackChunkeventbusforunity||[]).push([[523],{4271:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>a,contentTitle:()=>s,default:()=>f,frontMatter:()=>c,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"api-documentation/EventBusForUnity/IEventReceiver`TRegistrationLifecycleMethod, TDeregistrationLifecycleMethod`","title":"Interface IEventReceiver<TRegistrationLifecycleMethod, TDeregistrationLifecycleMethod>","description":"Defines a contract for components capable of receiving event notifications and specifies the lifecycle methods for event registration and deregistration.","source":"@site/docs/api-documentation/EventBusForUnity/IEventReceiver`TRegistrationLifecycleMethod, TDeregistrationLifecycleMethod`.md","sourceDirName":"api-documentation/EventBusForUnity","slug":"/api-documentation/EventBusForUnity/IEventReceiver`TRegistrationLifecycleMethod, TDeregistrationLifecycleMethod`","permalink":"/EventBusForUnity-docs/api-documentation/EventBusForUnity/IEventReceiver`TRegistrationLifecycleMethod, TDeregistrationLifecycleMethod`","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Interface IEventReceiver<TRegistrationLifecycleMethod, TDeregistrationLifecycleMethod>","sidebar_label":"IEventReceiver<TRegistrationLifecycleMethod, TDeregistrationLifecycleMethod>","description":"Defines a contract for components capable of receiving event notifications and specifies the lifecycle methods for event registration and deregistration."},"sidebar":"documentationSidebar","previous":{"title":"IEventReceiverWithHooks","permalink":"/EventBusForUnity-docs/api-documentation/EventBusForUnity/IEventReceiverWithHooks"},"next":{"title":"ListenerAttribute","permalink":"/EventBusForUnity-docs/api-documentation/EventBusForUnity/ListenerAttribute"}}');var r=i(4848),o=i(8453);const c={title:"Interface IEventReceiver<TRegistrationLifecycleMethod, TDeregistrationLifecycleMethod>",sidebar_label:"IEventReceiver<TRegistrationLifecycleMethod, TDeregistrationLifecycleMethod>",description:"Defines a contract for components capable of receiving event notifications and specifies the lifecycle methods for event registration and deregistration."},s="Interface IEventReceiver<TRegistrationLifecycleMethod, TDeregistrationLifecycleMethod>",a={},d=[{value:"<strong>Assembly</strong>: EventBusSourceGenerator.dll",id:"assembly-eventbussourcegeneratordll",level:6}];function l(e){const t={code:"code",h1:"h1",h6:"h6",header:"header",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"interface-ieventreceivertregistrationlifecyclemethod-tderegistrationlifecyclemethod",children:"Interface IEventReceiver<TRegistrationLifecycleMethod, TDeregistrationLifecycleMethod>"})}),"\n",(0,r.jsx)(t.p,{children:"Defines a contract for components capable of receiving event notifications\nand specifies the lifecycle methods for event registration and deregistration."}),"\n",(0,r.jsxs)(t.h6,{id:"assembly-eventbussourcegeneratordll",children:[(0,r.jsx)(t.strong,{children:"Assembly"}),": EventBusSourceGenerator.dll"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",metastring:'title="Declaration"',children:"public interface IEventReceiver<TRegistrationLifecycleMethod, TDeregistrationLifecycleMethod> where TRegistrationLifecycleMethod : EventRegistration where TDeregistrationLifecycleMethod : EventDeregistration\n"})})]})}function f(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>c,x:()=>s});var n=i(6540);const r={},o=n.createContext(r);function c(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);