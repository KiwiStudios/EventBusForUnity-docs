"use strict";(self.webpackChunkeventbusforunity=self.webpackChunkeventbusforunity||[]).push([[224],{946:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"documentationSidebar":[{"type":"link","label":"Welcome","href":"/EventBusForUnity-docs/","docId":"intro","unlisted":false},{"type":"link","label":"Installation","href":"/EventBusForUnity-docs/installation","docId":"installation","unlisted":false},{"type":"category","label":"Getting Started","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Basic usage","href":"/EventBusForUnity-docs/getting-started/basic-usage","docId":"getting-started/basic-usage","unlisted":false},{"type":"link","label":"Customizing registration in MonoBehaviours","href":"/EventBusForUnity-docs/getting-started/configure-registration-and-deregistration","docId":"getting-started/configure-registration-and-deregistration","unlisted":false},{"type":"link","label":"Static [Listener] methods","href":"/EventBusForUnity-docs/getting-started/static-listeners","docId":"getting-started/static-listeners","unlisted":false},{"type":"link","label":"Using the EventBus in pure C#","href":"/EventBusForUnity-docs/getting-started/using-eventbus-outside-of-monobehaviours","docId":"getting-started/using-eventbus-outside-of-monobehaviours","unlisted":false},{"type":"link","label":"Dynamic/Runtime Listener registration","href":"/EventBusForUnity-docs/getting-started/dynamic-listener-registration","docId":"getting-started/dynamic-listener-registration","unlisted":false},{"type":"link","label":"Async usage","href":"/EventBusForUnity-docs/getting-started/async-usage","docId":"getting-started/async-usage","unlisted":false},{"type":"link","label":"Listeners with dependencies","href":"/EventBusForUnity-docs/getting-started/listeners-with-dependencies","docId":"getting-started/listeners-with-dependencies","unlisted":false}],"href":"/EventBusForUnity-docs/category/getting-started"},{"type":"category","label":"API Documentation","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Index","href":"/EventBusForUnity-docs/api","docId":"api-documentation/index","unlisted":false},{"type":"category","label":"EventBusForUnity","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"EventDeregistration","href":"/EventBusForUnity-docs/api-documentation/EventBusForUnity/EventDeregistration","docId":"api-documentation/EventBusForUnity/EventDeregistration","unlisted":false},{"type":"link","label":"EventDeregistrationOnApplicationQuit","href":"/EventBusForUnity-docs/api-documentation/EventBusForUnity/EventDeregistrationOnApplicationQuit","docId":"api-documentation/EventBusForUnity/EventDeregistrationOnApplicationQuit","unlisted":false},{"type":"link","label":"EventDeregistrationOnDestroy","href":"/EventBusForUnity-docs/api-documentation/EventBusForUnity/EventDeregistrationOnDestroy","docId":"api-documentation/EventBusForUnity/EventDeregistrationOnDestroy","unlisted":false},{"type":"link","label":"EventDeregistrationOnDisable","href":"/EventBusForUnity-docs/api-documentation/EventBusForUnity/EventDeregistrationOnDisable","docId":"api-documentation/EventBusForUnity/EventDeregistrationOnDisable","unlisted":false},{"type":"link","label":"EventRegistration","href":"/EventBusForUnity-docs/api-documentation/EventBusForUnity/EventRegistration","docId":"api-documentation/EventBusForUnity/EventRegistration","unlisted":false},{"type":"link","label":"EventRegistrationAwake","href":"/EventBusForUnity-docs/api-documentation/EventBusForUnity/EventRegistrationAwake","docId":"api-documentation/EventBusForUnity/EventRegistrationAwake","unlisted":false},{"type":"link","label":"EventRegistrationOnEnable","href":"/EventBusForUnity-docs/api-documentation/EventBusForUnity/EventRegistrationOnEnable","docId":"api-documentation/EventBusForUnity/EventRegistrationOnEnable","unlisted":false},{"type":"link","label":"EventRegistrationStart","href":"/EventBusForUnity-docs/api-documentation/EventBusForUnity/EventRegistrationStart","docId":"api-documentation/EventBusForUnity/EventRegistrationStart","unlisted":false},{"type":"link","label":"IEventReceiverWithHooks","href":"/EventBusForUnity-docs/api-documentation/EventBusForUnity/IEventReceiverWithHooks","docId":"api-documentation/EventBusForUnity/IEventReceiverWithHooks","unlisted":false},{"type":"link","label":"IEventReceiver<TRegistrationLifecycleMethod, TDeregistrationLifecycleMethod>","href":"/EventBusForUnity-docs/api-documentation/EventBusForUnity/IEventReceiver`TRegistrationLifecycleMethod, TDeregistrationLifecycleMethod`","docId":"api-documentation/EventBusForUnity/IEventReceiver`TRegistrationLifecycleMethod, TDeregistrationLifecycleMethod`","unlisted":false},{"type":"link","label":"ListenerAttribute","href":"/EventBusForUnity-docs/api-documentation/EventBusForUnity/ListenerAttribute","docId":"api-documentation/EventBusForUnity/ListenerAttribute","unlisted":false}],"href":"/EventBusForUnity-docs/api-documentation/EventBusForUnity/"}],"href":"/EventBusForUnity-docs/category/api-documentation"},{"type":"link","label":"Frequently asked questions","href":"/EventBusForUnity-docs/FAQ","docId":"FAQ","unlisted":false}]},"docs":{"api-documentation/EventBusForUnity/EventBusForUnity":{"id":"api-documentation/EventBusForUnity/EventBusForUnity","title":"Namespace EventBusForUnity","description":"Classes","sidebar":"documentationSidebar"},"api-documentation/EventBusForUnity/EventDeregistration":{"id":"api-documentation/EventBusForUnity/EventDeregistration","title":"Class EventDeregistration","description":"Handles the removal or deregistration of events from the system. This class serves as a base for defining behavior specific to the point in the lifecycle when events are unregistered, such as during application quit, disable, or object destruction.","sidebar":"documentationSidebar"},"api-documentation/EventBusForUnity/EventDeregistrationOnApplicationQuit":{"id":"api-documentation/EventBusForUnity/EventDeregistrationOnApplicationQuit","title":"Class EventDeregistrationOnApplicationQuit","description":"Represents an event deregistration process executed during the Application Quit phase of the application\'s lifecycle. This class is designed to handle event cleanup tasks when the application is about to terminate.","sidebar":"documentationSidebar"},"api-documentation/EventBusForUnity/EventDeregistrationOnDestroy":{"id":"api-documentation/EventBusForUnity/EventDeregistrationOnDestroy","title":"Class EventDeregistrationOnDestroy","description":"Manages the deregistration of events during the destruction phase of an object\'s lifecycle. This class ensures that event handlers are unregistered properly when the associated object is destroyed, preventing potential memory leaks or unintended behavior.","sidebar":"documentationSidebar"},"api-documentation/EventBusForUnity/EventDeregistrationOnDisable":{"id":"api-documentation/EventBusForUnity/EventDeregistrationOnDisable","title":"Class EventDeregistrationOnDisable","description":"Defines behavior for deregistering events from the system when the associated object or component is disabled. This class ensures that event listeners are properly removed at the disable phase of the object\'s lifecycle to maintain system integrity.","sidebar":"documentationSidebar"},"api-documentation/EventBusForUnity/EventRegistration":{"id":"api-documentation/EventBusForUnity/EventRegistration","title":"Class EventRegistration","description":"Handles the registration of events within the system. The base class encapsulates the foundational behavior for event registration, and can be further subclassed to specify the lifecycle method during which registration occurs.","sidebar":"documentationSidebar"},"api-documentation/EventBusForUnity/EventRegistrationAwake":{"id":"api-documentation/EventBusForUnity/EventRegistrationAwake","title":"Class EventRegistrationAwake","description":"Represents an event registration process that is executed during the Awake phase of the game object lifecycle.","sidebar":"documentationSidebar"},"api-documentation/EventBusForUnity/EventRegistrationOnEnable":{"id":"api-documentation/EventBusForUnity/EventRegistrationOnEnable","title":"Class EventRegistrationOnEnable","description":"Represents an event registration process that is executed during the OnEnable phase of the game object lifecycle. This class ensures that event subscriptions are established when the game object becomes active.","sidebar":"documentationSidebar"},"api-documentation/EventBusForUnity/EventRegistrationStart":{"id":"api-documentation/EventBusForUnity/EventRegistrationStart","title":"Class EventRegistrationStart","description":"Represents an event registration process that is executed during the Start phase of the game object lifecycle. This class extends the standard event registration behavior to ensure registration occurs at the appropriate point in initialization.","sidebar":"documentationSidebar"},"api-documentation/EventBusForUnity/IEventReceiver`TRegistrationLifecycleMethod, TDeregistrationLifecycleMethod`":{"id":"api-documentation/EventBusForUnity/IEventReceiver`TRegistrationLifecycleMethod, TDeregistrationLifecycleMethod`","title":"Interface IEventReceiver<TRegistrationLifecycleMethod, TDeregistrationLifecycleMethod>","description":"Defines a contract for components capable of receiving event notifications and specifies the lifecycle methods for event registration and deregistration.","sidebar":"documentationSidebar"},"api-documentation/EventBusForUnity/IEventReceiverWithHooks":{"id":"api-documentation/EventBusForUnity/IEventReceiverWithHooks","title":"Interface IEventReceiverWithHooks","description":"When implemented, the source generator will add Hook() and Unhook() methods that need to be called to register the listeners contained in the class/struct/record.","sidebar":"documentationSidebar"},"api-documentation/EventBusForUnity/ListenerAttribute":{"id":"api-documentation/EventBusForUnity/ListenerAttribute","title":"Class ListenerAttribute","description":"Specifies that the attributed method is an event listener that should be invoked by the EventBus system.","sidebar":"documentationSidebar"},"api-documentation/index":{"id":"api-documentation/index","title":"Index","description":"Namespaces","sidebar":"documentationSidebar"},"FAQ":{"id":"FAQ","title":"Frequently asked questions","description":"These might prove useful in the case you\'re stuck, if you can\'t find your answer here feel free to reach out in the discord.","sidebar":"documentationSidebar"},"getting-started/async-usage":{"id":"getting-started/async-usage","title":"Async usage","description":"To send out messages in an async manner using UniTask you can call the .SendAsync() and .SendAsyncForget() methods","sidebar":"documentationSidebar"},"getting-started/basic-usage":{"id":"getting-started/basic-usage","title":"Basic usage","description":"Quick start","sidebar":"documentationSidebar"},"getting-started/configure-registration-and-deregistration":{"id":"getting-started/configure-registration-and-deregistration","title":"Customizing registration in MonoBehaviours","description":"This feature is specific for MonoBehaviours. For an example in pure C# see using eventbus outside of monobehaviours","sidebar":"documentationSidebar"},"getting-started/dynamic-listener-registration":{"id":"getting-started/dynamic-listener-registration","title":"Dynamic/Runtime Listener registration","description":"You might want to add a listener during runtime for a certain event. Have a look at the below snippet","sidebar":"documentationSidebar"},"getting-started/listeners-with-dependencies":{"id":"getting-started/listeners-with-dependencies","title":"Listeners with dependencies","description":"A stumble block you might encounter due to the unordered nature of how listeners are registered is that you would want ListenerA to run before ListenerB. And ListenerC to run after ListenerB.","sidebar":"documentationSidebar"},"getting-started/static-listeners":{"id":"getting-started/static-listeners","title":"Static [Listener] methods","description":"Very straight forward, works out of the box.","sidebar":"documentationSidebar"},"getting-started/using-eventbus-outside-of-monobehaviours":{"id":"getting-started/using-eventbus-outside-of-monobehaviours","title":"Using the EventBus in pure C#","description":"`","sidebar":"documentationSidebar"},"installation":{"id":"installation","title":"Installation","description":"It\'s relatively straight forward.","sidebar":"documentationSidebar"},"intro":{"id":"intro","title":"Welcome","description":"Here you can find the documentation for EventBus for Unity. Please reach out to the discord in the case of questions using the #support-forum channel.","sidebar":"documentationSidebar"}}}}')}}]);